/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiCoreHabitDataAddHabitDataPost$Json } from '../fn/habit-data/api-core-habit-data-add-habit-data-post-json';
import { ApiCoreHabitDataAddHabitDataPost$Json$Params } from '../fn/habit-data/api-core-habit-data-add-habit-data-post-json';
import { apiCoreHabitDataAddHabitDataPost$Plain } from '../fn/habit-data/api-core-habit-data-add-habit-data-post-plain';
import { ApiCoreHabitDataAddHabitDataPost$Plain$Params } from '../fn/habit-data/api-core-habit-data-add-habit-data-post-plain';
import { apiCoreHabitDataClearHabitDataPost$Json } from '../fn/habit-data/api-core-habit-data-clear-habit-data-post-json';
import { ApiCoreHabitDataClearHabitDataPost$Json$Params } from '../fn/habit-data/api-core-habit-data-clear-habit-data-post-json';
import { apiCoreHabitDataClearHabitDataPost$Plain } from '../fn/habit-data/api-core-habit-data-clear-habit-data-post-plain';
import { ApiCoreHabitDataClearHabitDataPost$Plain$Params } from '../fn/habit-data/api-core-habit-data-clear-habit-data-post-plain';
import { apiCoreHabitDataGetHabitsDataGet$Json } from '../fn/habit-data/api-core-habit-data-get-habits-data-get-json';
import { ApiCoreHabitDataGetHabitsDataGet$Json$Params } from '../fn/habit-data/api-core-habit-data-get-habits-data-get-json';
import { apiCoreHabitDataGetHabitsDataGet$Plain } from '../fn/habit-data/api-core-habit-data-get-habits-data-get-plain';
import { ApiCoreHabitDataGetHabitsDataGet$Plain$Params } from '../fn/habit-data/api-core-habit-data-get-habits-data-get-plain';
import { HabitDto } from '../models/habit-dto';

@Injectable({ providedIn: 'root' })
export class HabitDataService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiCoreHabitDataAddHabitDataPost()` */
  static readonly ApiCoreHabitDataAddHabitDataPostPath = '/api/core/HabitData/add-habit-data';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataAddHabitDataPost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataAddHabitDataPost$Plain$Response(params: ApiCoreHabitDataAddHabitDataPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<HabitDto>> {
    return apiCoreHabitDataAddHabitDataPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataAddHabitDataPost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataAddHabitDataPost$Plain(params: ApiCoreHabitDataAddHabitDataPost$Plain$Params, context?: HttpContext): Observable<HabitDto> {
    return this.apiCoreHabitDataAddHabitDataPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<HabitDto>): HabitDto => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataAddHabitDataPost$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataAddHabitDataPost$Json$Response(params: ApiCoreHabitDataAddHabitDataPost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<HabitDto>> {
    return apiCoreHabitDataAddHabitDataPost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataAddHabitDataPost$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataAddHabitDataPost$Json(params: ApiCoreHabitDataAddHabitDataPost$Json$Params, context?: HttpContext): Observable<HabitDto> {
    return this.apiCoreHabitDataAddHabitDataPost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<HabitDto>): HabitDto => r.body)
    );
  }

  /** Path part for operation `apiCoreHabitDataClearHabitDataPost()` */
  static readonly ApiCoreHabitDataClearHabitDataPostPath = '/api/core/HabitData/clear-habit-data';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataClearHabitDataPost$Plain()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataClearHabitDataPost$Plain$Response(params: ApiCoreHabitDataClearHabitDataPost$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<HabitDto>> {
    return apiCoreHabitDataClearHabitDataPost$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataClearHabitDataPost$Plain$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataClearHabitDataPost$Plain(params: ApiCoreHabitDataClearHabitDataPost$Plain$Params, context?: HttpContext): Observable<HabitDto> {
    return this.apiCoreHabitDataClearHabitDataPost$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<HabitDto>): HabitDto => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataClearHabitDataPost$Json()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataClearHabitDataPost$Json$Response(params: ApiCoreHabitDataClearHabitDataPost$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<HabitDto>> {
    return apiCoreHabitDataClearHabitDataPost$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataClearHabitDataPost$Json$Response()` instead.
   *
   * This method sends `application/*+json` and handles request body of type `application/*+json`.
   */
  apiCoreHabitDataClearHabitDataPost$Json(params: ApiCoreHabitDataClearHabitDataPost$Json$Params, context?: HttpContext): Observable<HabitDto> {
    return this.apiCoreHabitDataClearHabitDataPost$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<HabitDto>): HabitDto => r.body)
    );
  }

  /** Path part for operation `apiCoreHabitDataGetHabitsDataGet()` */
  static readonly ApiCoreHabitDataGetHabitsDataGetPath = '/api/core/HabitData/get-habits-data';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataGetHabitsDataGet$Plain()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCoreHabitDataGetHabitsDataGet$Plain$Response(params?: ApiCoreHabitDataGetHabitsDataGet$Plain$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<HabitDto>>> {
    return apiCoreHabitDataGetHabitsDataGet$Plain(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataGetHabitsDataGet$Plain$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCoreHabitDataGetHabitsDataGet$Plain(params?: ApiCoreHabitDataGetHabitsDataGet$Plain$Params, context?: HttpContext): Observable<Array<HabitDto>> {
    return this.apiCoreHabitDataGetHabitsDataGet$Plain$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<HabitDto>>): Array<HabitDto> => r.body)
    );
  }

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiCoreHabitDataGetHabitsDataGet$Json()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCoreHabitDataGetHabitsDataGet$Json$Response(params?: ApiCoreHabitDataGetHabitsDataGet$Json$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<HabitDto>>> {
    return apiCoreHabitDataGetHabitsDataGet$Json(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiCoreHabitDataGetHabitsDataGet$Json$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiCoreHabitDataGetHabitsDataGet$Json(params?: ApiCoreHabitDataGetHabitsDataGet$Json$Params, context?: HttpContext): Observable<Array<HabitDto>> {
    return this.apiCoreHabitDataGetHabitsDataGet$Json$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<HabitDto>>): Array<HabitDto> => r.body)
    );
  }

}
